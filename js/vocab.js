// ------------------------------
// AI Bayan Vocabulary Trainer 2025 (embedded)
// ------------------------------

// –°–æ–∑–¥–∞–µ–º —ç–∫—Ä–∞–Ω #vocab, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç –≤ index.html
(function ensureVocabScreen() {
  if (!document.getElementById('vocab')) {
    const el = document.createElement('div');
    el.id = 'vocab';
    el.className = 'screen section';
    el.innerHTML = `
      <h2>Vocabulary ‚Äî Topic <span id="vTopicNo">1</span></h2>
      <div id="vocabContent"></div>
      <div class="nav-buttons">
        <button id="vBack">Back</button>
        <button id="vNext">Next</button>
      </div>
    `;
    document.body.appendChild(el);
  }
})();

// –î–∞–Ω–Ω—ã–µ: 12 —Ç–µ–º √ó 10 —Å–ª–æ–≤ (EN + RU)
const vocabData = [
  { topic: "My Family", words: [
    {en:"father",ru:"–æ—Ç–µ—Ü"},{en:"mother",ru:"–º–∞–º–∞"},{en:"brother",ru:"–±—Ä–∞—Ç"},{en:"sister",ru:"—Å–µ—Å—Ç—Ä–∞"},
    {en:"grandmother",ru:"–±–∞–±—É—à–∫–∞"},{en:"grandfather",ru:"–¥–µ–¥—É—à–∫–∞"},{en:"parents",ru:"—Ä–æ–¥–∏—Ç–µ–ª–∏"},
    {en:"uncle",ru:"–¥—è–¥—è"},{en:"aunt",ru:"—Ç—ë—Ç—è"},{en:"cousin",ru:"–¥–≤–æ—é—Ä–æ–¥–Ω—ã–π –±—Ä–∞—Ç/—Å–µ—Å—Ç—Ä–∞"}
  ]},
  { topic: "My School", words: [
    {en:"teacher",ru:"—É—á–∏—Ç–µ–ª—å"},{en:"student",ru:"—É—á–µ–Ω–∏–∫"},{en:"classroom",ru:"–∫–ª–∞—Å—Å"},
    {en:"board",ru:"–¥–æ—Å–∫–∞"},{en:"desk",ru:"–ø–∞—Ä—Ç–∞"},{en:"pen",ru:"—Ä—É—á–∫–∞"},{en:"pencil",ru:"–∫–∞—Ä–∞–Ω–¥–∞—à"},
    {en:"ruler",ru:"–ª–∏–Ω–µ–π–∫–∞"},{en:"book",ru:"–∫–Ω–∏–≥–∞"},{en:"notebook",ru:"—Ç–µ—Ç—Ä–∞–¥—å"}
  ]},
  { topic: "My House", words: [
    {en:"kitchen",ru:"–∫—É—Ö–Ω—è"},{en:"bedroom",ru:"—Å–ø–∞–ª—å–Ω—è"},{en:"bathroom",ru:"–≤–∞–Ω–Ω–∞—è"},
    {en:"living room",ru:"–≥–æ—Å—Ç–∏–Ω–∞—è"},{en:"door",ru:"–¥–≤–µ—Ä—å"},{en:"window",ru:"–æ–∫–Ω–æ"},
    {en:"chair",ru:"—Å—Ç—É–ª"},{en:"table",ru:"—Å—Ç–æ–ª"},{en:"bed",ru:"–∫—Ä–æ–≤–∞—Ç—å"},{en:"lamp",ru:"–ª–∞–º–ø–∞"}
  ]},
  { topic: "My Day", words: [
    {en:"morning",ru:"—É—Ç—Ä–æ"},{en:"evening",ru:"–≤–µ—á–µ—Ä"},{en:"breakfast",ru:"–∑–∞–≤—Ç—Ä–∞–∫"},{en:"lunch",ru:"–æ–±–µ–¥"},
    {en:"dinner",ru:"—É–∂–∏–Ω"},{en:"homework",ru:"–¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ"},{en:"play",ru:"–∏–≥—Ä–∞—Ç—å"},
    {en:"study",ru:"—É—á–∏—Ç—å—Å—è"},{en:"sleep",ru:"—Å–ø–∞—Ç—å"},{en:"wash",ru:"–º—ã—Ç—å/–º—ã—Ç—å—Å—è"}
  ]},
  { topic: "Animals", words: [
    {en:"cat",ru:"–∫–æ—Ç"},{en:"dog",ru:"—Å–æ–±–∞–∫–∞"},{en:"bird",ru:"–ø—Ç–∏—Ü–∞"},{en:"fish",ru:"—Ä—ã–±–∞"},
    {en:"cow",ru:"–∫–æ—Ä–æ–≤–∞"},{en:"horse",ru:"–ª–æ—à–∞–¥—å"},{en:"sheep",ru:"–æ–≤—Ü–∞"},
    {en:"duck",ru:"—É—Ç–∫–∞"},{en:"chicken",ru:"–∫—É—Ä–∏—Ü–∞"},{en:"lion",ru:"–ª–µ–≤"}
  ]},
  { topic: "Food & Drinks", words: [
    {en:"apple",ru:"—è–±–ª–æ–∫–æ"},{en:"banana",ru:"–±–∞–Ω–∞–Ω"},{en:"bread",ru:"—Ö–ª–µ–±"},{en:"milk",ru:"–º–æ–ª–æ–∫–æ"},
    {en:"water",ru:"–≤–æ–¥–∞"},{en:"tea",ru:"—á–∞–π"},{en:"juice",ru:"—Å–æ–∫"},
    {en:"rice",ru:"—Ä–∏—Å"},{en:"meat",ru:"–º—è—Å–æ"},{en:"soup",ru:"—Å—É–ø"}
  ]},
  { topic: "Clothes", words: [
    {en:"shirt",ru:"—Ä—É–±–∞—à–∫–∞"},{en:"dress",ru:"–ø–ª–∞—Ç—å–µ"},{en:"skirt",ru:"—é–±–∫–∞"},{en:"pants",ru:"–±—Ä—é–∫–∏"},
    {en:"shoes",ru:"—Ç—É—Ñ–ª–∏"},{en:"boots",ru:"–±–æ—Ç–∏–Ω–∫–∏"},{en:"jacket",ru:"–∫—É—Ä—Ç–∫–∞"},
    {en:"coat",ru:"–ø–∞–ª—å—Ç–æ"},{en:"hat",ru:"—à–ª—è–ø–∞"},{en:"gloves",ru:"–ø–µ—Ä—á–∞—Ç–∫–∏"}
  ]},
  { topic: "Weather & Seasons", words: [
    {en:"sunny",ru:"—Å–æ–ª–Ω–µ—á–Ω–æ"},{en:"rainy",ru:"–¥–æ–∂–¥–ª–∏–≤–æ"},{en:"windy",ru:"–≤–µ—Ç—Ä–µ–Ω–æ"},
    {en:"snowy",ru:"—Å–Ω–µ–∂–Ω–æ"},{en:"cloudy",ru:"–æ–±–ª–∞—á–Ω–æ"},{en:"hot",ru:"–∂–∞—Ä–∫–æ"},
    {en:"cold",ru:"—Ö–æ–ª–æ–¥–Ω–æ"},{en:"spring",ru:"–≤–µ—Å–Ω–∞"},{en:"summer",ru:"–ª–µ—Ç–æ"},{en:"winter",ru:"–∑–∏–º–∞"}
  ]},
  { topic: "Jobs", words: [
    {en:"doctor",ru:"–≤—Ä–∞—á"},{en:"nurse",ru:"–º–µ–¥—Å–µ—Å—Ç—Ä–∞"},{en:"teacher",ru:"—É—á–∏—Ç–µ–ª—å"},
    {en:"driver",ru:"–≤–æ–¥–∏—Ç–µ–ª—å"},{en:"police officer",ru:"–ø–æ–ª–∏—Ü–µ–π—Å–∫–∏–π"},
    {en:"firefighter",ru:"–ø–æ–∂–∞—Ä–Ω—ã–π"},{en:"cook",ru:"–ø–æ–≤–∞—Ä"},{en:"farmer",ru:"—Ñ–µ—Ä–º–µ—Ä"},
    {en:"builder",ru:"—Å—Ç—Ä–æ–∏—Ç–µ–ª—å"},{en:"pilot",ru:"–ø–∏–ª–æ—Ç"}
  ]},
  { topic: "Sports & Hobbies", words: [
    {en:"football",ru:"—Ñ—É—Ç–±–æ–ª"},{en:"basketball",ru:"–±–∞—Å–∫–µ—Ç–±–æ–ª"},{en:"swimming",ru:"–ø–ª–∞–≤–∞–Ω–∏–µ"},
    {en:"running",ru:"–±–µ–≥"},{en:"cycling",ru:"–≤–µ–ª–æ—Å–ø–æ—Ä—Ç"},{en:"reading",ru:"—á—Ç–µ–Ω–∏–µ"},
    {en:"drawing",ru:"—Ä–∏—Å–æ–≤–∞–Ω–∏–µ"},{en:"dancing",ru:"—Ç–∞–Ω—Ü—ã"},{en:"music",ru:"–º—É–∑—ã–∫–∞"},{en:"chess",ru:"—à–∞—Ö–º–∞—Ç—ã"}
  ]},
  { topic: "The City", words: [
    {en:"street",ru:"—É–ª–∏—Ü–∞"},{en:"park",ru:"–ø–∞—Ä–∫"},{en:"shop",ru:"–º–∞–≥–∞–∑–∏–Ω"},{en:"school",ru:"—à–∫–æ–ª–∞"},
    {en:"hospital",ru:"–±–æ–ª—å–Ω–∏—Ü–∞"},{en:"bank",ru:"–±–∞–Ω–∫"},{en:"library",ru:"–±–∏–±–ª–∏–æ—Ç–µ–∫–∞"},
    {en:"bus stop",ru:"–æ—Å—Ç–∞–Ω–æ–≤–∫–∞"},{en:"bridge",ru:"–º–æ—Å—Ç"},{en:"square",ru:"–ø–ª–æ—â–∞–¥—å"}
  ]},
  { topic: "Body & Health", words: [
    {en:"head",ru:"–≥–æ–ª–æ–≤–∞"},{en:"hand",ru:"—Ä—É–∫–∞"},{en:"leg",ru:"–Ω–æ–≥–∞"},{en:"eye",ru:"–≥–ª–∞–∑"},
    {en:"ear",ru:"—É—Ö–æ"},{en:"nose",ru:"–Ω–æ—Å"},{en:"mouth",ru:"—Ä–æ—Ç"},
    {en:"tooth",ru:"–∑—É–±"},{en:"doctor",ru:"–≤—Ä–∞—á"},{en:"medicine",ru:"–ª–µ–∫–∞—Ä—Å—Ç–≤–æ"}
  ]}
];

// –°–æ—Å—Ç–æ—è–Ω–∏–µ
let vCurrent = 0;       // —Ç–µ–∫—É—â–∞—è —Ç–µ–º–∞
let vScore = 0;

// DOM-—É–∑–ª—ã
const vTopicNo = document.getElementById('vTopicNo');
const vocabContent = document.getElementById('vocabContent');
const vBackBtn = document.getElementById('vBack');
const vNextBtn = document.getElementById('vNext');

// –†–µ–Ω–¥–µ—Ä —Ç–µ–º—ã (—Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤ + –º–∏–Ω–∏-–∏–≥—Ä–∞)
function renderVocabTopic() {
  const t = vocabData[vCurrent];
  vTopicNo.textContent = vCurrent + 1;

  // –°–ø–∏—Å–æ–∫ —Å–ª–æ–≤ (–∫–∞—Ä—Ç–æ—á–∫–∏)
  const list = t.words.map(w => `
    <div class="card" style="margin:8px 0; padding:10px;">
      <b>${w.en}</b> ‚Äî <i>${w.ru}</i>
    </div>
  `).join("");

  // –ò–≥—Ä–∞ Guess the Word
  const pool = shuffle([...t.words]); // –∫–æ–ø–∏—è –∏ –ø–µ—Ä–µ–º–µ—à–∞—Ç—å
  const first = pool[0];

  vocabContent.innerHTML = `
    <h3>${t.topic}</h3>
    <div>${list}</div>
    <hr style="margin:16px 0;">
    <h4>üéØ Guess the Word</h4>
    <p>Write the English word for: <b>${first.ru}</b></p>
    <input type="text" id="guessInput" placeholder="type here" autocomplete="off" />
    <button id="checkGuess">Check</button>
    <div id="guessStatus" style="min-height:24px; margin-top:6px;"></div>
  `;

  const seq = pool; // –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–ª–æ–≤ –¥–ª—è –∏–≥—Ä—ã
  let gi = 0;

  function setPrompt() {
    const cur = seq[gi];
    document.querySelector('#guessStatus').textContent = "";
    vocabContent.querySelector('p').innerHTML = `Write the English word for: <b>${cur.ru}</b>`;
    document.getElementById('guessInput').value = "";
    document.getElementById('guessInput').focus();
  }

  document.getElementById('checkGuess').onclick = () => {
    const input = document.getElementById('guessInput').value.trim().toLowerCase();
    const target = seq[gi].en.toLowerCase();
    const status = document.getElementById('guessStatus');

    if (input === target) {
      vScore++;
      status.textContent = "‚úÖ Correct!";
      playStar();
      try { new Audio("sound/ding.wav").play(); } catch(e){}
      gi++;
      if (gi < seq.length) {
        setTimeout(setPrompt, 400);
      } else {
        status.innerHTML = `üéâ Great! You finished <b>${t.topic}</b>.`;
      }
    } else {
      status.textContent = "‚ùå Try again!";
    }
  };

  // –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
  vBackBtn.onclick = () => {
    if (vCurrent > 0) {
      vCurrent--;
      renderVocabTopic();
    }
  };
  vNextBtn.onclick = () => {
    if (vCurrent < vocabData.length - 1) {
      vCurrent++;
      renderVocabTopic();
    } else {
      // –ø–æ—Å–ª–µ–¥–Ω–µ–µ: –Ω–∞–∑–∞–¥ –≤ –º–µ–Ω—é (—Ñ—É–Ω–∫—Ü–∏—è show() –µ—Å—Ç—å –≤ app.js)
      if (typeof show === 'function') show('menu');
    }
  };
}

function shuffle(arr) {
  for (let i = arr.length - 1; i > 0; i--) {
    const j = (Math.random() * (i + 1)) | 0;
    [arr[i], arr[j]] = [arr[j], arr[i]];
  }
  return arr;
}

// –ó–≤—ë–∑–¥–æ—á–∫–∏ ‚ú®
function playStar() {
  const star = document.createElement("div");
  star.textContent = "‚≠ê";
  star.style.position = "fixed";
  star.style.left = "50%";
  star.style.top = "58%";
  star.style.transform = "translate(-50%,-50%)";
  star.style.fontSize = "42px";
  star.style.animation = "fly 0.9s ease-out";
  star.style.pointerEvents = "none";
  document.body.appendChild(star);
  setTimeout(() => star.remove(), 900);
}

// –ù–µ–º–Ω–æ–≥–æ CSS (–µ—Å–ª–∏ –Ω–µ—Ç –≤ style.css ‚Äî –¥–æ–±–∞–≤–∏–º keyframes)
(function ensureKeyframes(){
  const style = document.createElement('style');
  style.textContent = `
  @keyframes fly { 
    0%{opacity:0; transform:translate(-50%,-40%) scale(0.8);} 
    50%{opacity:1;} 
    100%{opacity:0; transform:translate(-50%,-80%) scale(1.2);} 
  }`;
  document.head.appendChild(style);
})();

// –ê–≤—Ç–æ-–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Ä–∞–∑–¥–µ–ª–∞
(function hookMenu() {
  // –µ—Å–ª–∏ –≤ app.js –µ—Å—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ data-target, –æ–Ω –≤—ã–∑–æ–≤–µ—Ç show('vocab');
  // –º—ã –∂–µ –ø—Ä–æ—Å—Ç–æ —Ä–µ–Ω–¥–µ—Ä–∏–º —Ä–∞–∑–¥–µ–ª –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –ø–æ–∫–∞–∑–µ
  const vocabScreen = document.getElementById('vocab');
  const observer = new MutationObserver(() => {
    if (vocabScreen.classList.contains('active')) {
      renderVocabTopic();
    }
  });
  observer.observe(vocabScreen, { attributes: true, attributeFilter: ['class'] });
})();
